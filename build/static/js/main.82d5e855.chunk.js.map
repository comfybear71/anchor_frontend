{"version":3,"sources":["Copyright.js","Title.js","context/InfoContext.js","Total_Deposit.js","Total_InterestRate.js","Total_Expected.js","Total_Transactions.js","context/UserContext.js","context/UserBalanceContext.js","context/RewardContext.js","Body.js","WalletMenuIcon.js","MenuIcon.js","images/gold.png","MenuAppBar.js","App.js","index.js"],"names":["DotGreen","withStyles","root","color","green","FiberManualRecordIcon","DotRed","red","Copyright","props","Typography","variant","align","blockHeight","fontSize","Link","href","Date","getFullYear","Title","gutterBottom","component","children","InfoContext","createContext","useStyles","makeStyles","theme","button","margin","borderRadius","width","padding","dialogPaper","height","input","marginLeft","flex","iconButton","divider","buttonDeposit","dialog","breakpoints","down","transform","Transition","React","forwardRef","ref","Slide","direction","Total_Deposit","classes","useState","amount","setAmount","mnenmonic","setMnemonic","openDeposit","setOpenDeposit","openWithdraw","setOpenWithdraw","useContext","info","setInfo","setStatus","setTxFee","setTxDetails","handleClickOpenDeposit","handleClickOpenWithdraw","parseFloat","deposit","toFixed","Box","pt","Button","onClick","className","size","Dialog","open","TransitionComponent","keepMounted","onClose","paper","maxWidth","box","m","DialogTitle","id","display","p","flexGrow","TextField","type","fullWidth","value","onChange","e","target","label","FormHelperText","balance","wallet","depositData","a","anchorEarn","currency","DENOMS","UST","console","log","currencies","balanceInfo","market","status","txFee","txDetails","txHash","Axios","post","transaction_type","get","then","resp","initBalance","data","ustBalance","balances","account_balance","deposit_balance","liquidity","markets","APY","reward","catch","err","patch","alert","AnchorEarn","chain","CHAINS","TERRA","network","NETWORKS","TEQUILA_0004","address","mnemonic","withdrawData","withdraw","Math","abs","GreenTextTypography","Total_InterestRate","interest","depositContext","yellow","ColorToggleButton","ToggleButton","Total_Expected","alignment","setAlignment","setA","ToggleButtonGroup","exclusive","event","newAlignment","apy","columns","minWidth","theArray","container","maxHeight","Transactions","page","setPage","rowsPerPage","setRowsPerPage","useEffect","i","length","newItem","val","str","res","substring","resLength","resLast","url","shortenedTXHash","makeURL","date","created_at","push","Paper","TableContainer","Table","stickyHeader","aria-label","TableBody","slice","map","row","TableRow","hover","role","tabIndex","column","TableCell","format","code","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","UserContext","UserBalanceContext","RewardContext","menuButton","marginRight","spacing","title","textAlign","sub_title","customBorderRadius","fixedCardHeight","appBarSpacer","content","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","item2","order","up","item3","fixedTableHeight","RedArrow","ArrowDownwardIcon","GreenArrow","ArrowUpwardIcon","Body","Container","Grid","item","xs","md","lg","elevation","Card","CardContent","mixins","toolbar","logo","backgroundColor","buttonChrome","grid","alignContent","popover","pointerEvents","WalletMenuIcon","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","setWallet","openWallet","setOpenWallet","handleClickOpenWallet","fetchData","name","palette","getContrastText","borderColor","IconButton","aria-controls","aria-haspopup","ext","Extension","connect","on","justifyContent","inputProps","textarea","style","endIcon","MenuIcon","anchorEl","setAnchorEl","currentTarget","Menu","Boolean","nav","MenuItem","flexShrink","titleMain1","GreenRadio","checked","Radio","BlueRadio","blue","MenuAppBar","darkState","setDarkState","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","createMuiTheme","primary","main","secondary","selectedValue","setSelectedValue","auth","setAuth","handleChangeChecked","ThemeProvider","FormGroup","FormControlLabel","control","Switch","AppBar","position","Toolbar","src","gold","alt","handleMenu","handleClose","background","App","setValue","userBalance","setUserBalance","rewards","setRewards","Provider","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ilBAQMA,EAAWC,YAAW,CACxBC,KAAM,CACFC,MAAOC,IAAM,OAFJH,CAIdI,KAEGC,EAASL,YAAW,CACtBC,KAAM,CACFC,MAAOI,IAAI,OAFJN,CAIZI,KA2BYG,EAzBG,SAACC,GACf,OACI,qCACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQR,MAAM,gBAAgBS,MAAM,SAAxD,UACKH,EAAMI,YAEH,cAACb,EAAD,CAAUc,SAAS,QAAQX,MAAM,WAEjC,cAACG,EAAD,CAAQQ,SAAS,QAAQX,MAAM,WALvC,iBAOmBM,EAAMI,eAGzB,eAACH,EAAA,EAAD,CAAYC,QAAQ,QAAQR,MAAM,gBAAgBS,MAAM,SAAxD,UACK,kBACD,cAACG,EAAA,EAAD,CAAMZ,MAAM,UAAUa,KAAK,uBAA3B,yBAEQ,KACP,IAAIC,MAAOC,cACX,W,iCCnCF,SAASC,EAAMV,GAC5B,OACE,cAACC,EAAA,EAAD,CAAYU,cAAY,EAACT,QAAQ,KAAKU,UAAU,KAAhD,SACGZ,EAAMa,W,mECLAC,EAAcC,wBAAc,M,yBCanCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,OAAQ,GACRC,aAAc,GACdC,MAAO,MACPC,QAAS,GAEbC,YAAa,CACTC,OAAS,OACTH,MAAQ,QACRD,aAAe,QAGnBK,MAAO,CACHC,WAAY,EACZC,KAAM,GAEVC,WAAY,CACRN,QAAS,IAEbO,QAAS,CACLL,OAAQ,GACRL,OAAQ,GAEZW,cAAe,CACXX,OAAQ,GACRC,aAAc,GACdC,MAAO,MACPC,QAAS,GAEbS,OAAO,eACFd,EAAMe,YAAYC,KAAK,MAAQ,CAC5B,0CAA2C,CACvCd,OAAQ,UACRC,aAAc,OACdI,OAAQ,QAERU,UAAW,uCAOrBC,EAAaC,IAAMC,YAAW,SAAoBtC,EAAOuC,GAC3D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASvC,OAGhC,SAAS0C,EAAc1C,GAClC,IAAM2C,EAAU3B,IAChB,EAA4B4B,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAwBC,qBAAWvC,GAAnC,mBAAOwC,EAAP,KAAaC,EAAb,KACA,EAA4BX,qBAA5B,mBAAeY,GAAf,WACA,EAA0BZ,qBAA1B,mBAAca,GAAd,WACA,EAAkCb,qBAAlC,mBAAkBc,GAAlB,WAEMC,EAAyB,WAC3BT,GAAgBD,GAChBH,EAAU,IACVE,EAAY,KAGVY,EAA0B,WAC5BR,GAAiBD,GACjBL,EAAU,IACVE,EAAY,KA6JhB,OACI,qCACI,cAACtC,EAAD,4BACA,eAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,gBAAgBkB,UAAU,IAAzD,UACKiD,WAAW7D,EAAM8D,SAASC,QAAQ,GADvC,UAGA,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAG9D,MAAM,SAAlB,UACI,cAAC+D,EAAA,EAAD,CAAQC,QAASR,EAAwBzD,QAAQ,YAAYkE,UAAWzB,EAAQxB,OAAQkD,KAAK,QAAQ3E,MAAM,UAA3G,qBAGA,cAACwE,EAAA,EAAD,CAAQC,QAASP,EAAyB1D,QAAQ,YAAYkE,UAAWzB,EAAQxB,OAAQkD,KAAK,QAAQ3E,MAAM,UAA5G,yBAMJ,cAAC4E,EAAA,EAAD,CACIF,UAAWzB,EAAQX,OACnBuC,KAAMtB,EACNuB,oBAAqBpC,EACrBqC,aAAW,EACXC,QAASf,EACThB,QAAS,CAAEgC,MAAQhC,EAAQnB,aAC3BoD,SAAU,KAPd,SAUI,eAACZ,EAAA,EAAD,CAAKI,UAAWzB,EAAQkC,IAAKC,EAAG,EAAhC,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,2BAAhB,SAA2C,cAACtE,EAAD,wBAC3C,cAACsD,EAAA,EAAD,CAAKiB,QAAQ,OAAb,SACI,eAACjB,EAAA,EAAD,CAAKkB,EAAG,EAAGC,SAAU,EAArB,UACI,cAACC,EAAA,EAAD,CACIC,KAAK,SACLC,WAAW,EACXC,MAAO1C,EACP2C,SAAU,SAAAC,GAAC,OAAI3C,EAAU2C,EAAEC,OAAOH,QAClCI,MAAM,WACR,eAACC,EAAA,EAAD,CAAgBZ,GAAG,iBAAnB,0BAAkD1B,EAAKuC,QAAvD,YAIV,cAAC7B,EAAA,EAAD,CAAKiB,QAAQ,OAAb,SACI,eAACjB,EAAA,EAAD,CAAKkB,EAAG,EAAGC,SAAU,EAArB,UACI,cAACC,EAAA,EAAD,CAEIE,WAAW,EACXC,MAAOxC,EACPyC,SAAU,SAAAC,GAAC,OAAIzC,EAAYyC,EAAEC,OAAOH,QACpCI,MAAM,aAER,cAACC,EAAA,EAAD,CAAgBZ,GAAG,iBAAnB,iCAIV,cAAChB,EAAA,EAAD,CAAKC,GAAI,EAAG9D,MAAM,SAAlB,SACI,cAAC+D,EAAA,EAAD,CAAQC,QAhNT,WACf,GAAkB,MAAfb,EAAKwC,OAAgB,CACpB,GAAGjD,GAAUE,EACT,IAAK,IAQcgD,EARf,uCAQA,gCAAAC,EAAA,+EAE8BC,EAAWnC,QAAQ,CACrCjB,OAAQA,EACRqD,SAAUC,SAAOC,MAJ7B,cAEctC,EAFd,OAOQuC,QAAQC,IAAI,mBAAoBxC,GAPxC,SASkCmC,EAAWJ,QAAQ,CAAEU,WAAY,CAAEJ,SAAOC,OAT5E,cAScI,EATd,iBAU6BP,EAAWQ,OAAO,CAAEF,WAAY,CAAEJ,SAAOC,OAVtE,eAUcK,EAVd,OAYQjD,EAAUM,EAAQ4C,QAClBjD,EAASK,EAAQ6C,OACjBjD,EAAaI,EAAQ8C,UAAU,GAAGC,QAElCC,IAAMC,KAAN,mEAAuEzD,EAAKwC,OAA5E,iBAAmG,CAC/FA,OAAQxC,EAAKwC,OACbkB,iBAAiB,UACjBnE,OAAQA,EACRgE,OAAQ/C,EAAQ8C,UAAU,GAAGC,SAGjCC,IAAMG,IAAN,4DAA+D3D,EAAKwC,SACnEoB,MAAK,SAAAC,GACF5D,EAAQ,CACJ6D,YAAavD,WAAWsD,EAAKE,KAAKC,WAAY,IAAMzD,WAAWhB,EAAQ,IACvEgD,QAASW,EAAYe,SAAS,GAAGC,gBACjC1D,QAAS0C,EAAYe,SAAS,GAAGE,gBACjChG,OAAQ+E,EAAY/E,OACpBiG,UAAWjB,EAAOkB,QAAQ,GAAGD,UAC7BE,IAAKnB,EAAOkB,QAAQ,GAAGC,IACvBC,OAAQrB,EAAYe,SAAS,GAAGE,iBAAmB5D,WAAWsD,EAAKE,KAAKC,WAAY,IAAMzD,WAAWhB,EAAQ,KAC7GiD,OAAQxC,EAAKwC,YAGpBgC,OAAM,SAAAC,GACH1B,QAAQC,IAAKyB,EAAK,4BArC9B,UAwCcjB,IAAMkB,MAAN,4DAAiE1E,EAAKwC,QAAU,CAClFwB,WAAczD,WAAWP,EAAK8D,YAAa,IAAMvD,WAAWhB,EAAQ,MACrEqE,MAAK,SAAAC,GACJd,QAAQC,IAAI,6BACbwB,OAAM,SAAAC,GACL1B,QAAQC,IAAKyB,EAAK,0BA7C9B,0DAgDQE,MAAM,EAAD,IAhDb,0DARA,qDACMhC,EAAa,IAAIiC,aAAW,CAC9BC,MAAOC,SAAOC,MACdC,QAASC,WAASC,aAClBC,QAASnF,EAAKwC,OACd4C,SAAU3F,IAsDdgD,IACF,MAAMgC,GACJE,MAAMF,QAGVE,MAAM,WAEVtE,SAEAsE,MAAM,kBACNtE,KAwIyCzD,QAAQ,YAAYkE,UAAWzB,EAAQxB,OAAQkD,KAAK,QAAQ3E,MAAM,UAA/F,4BASZ,cAAC4E,EAAA,EAAD,CACIF,UAAWzB,EAAQX,OACnBuC,KAAMpB,EACNqB,oBAAqBpC,EACrBqC,aAAW,EACXC,QAASd,EACTjB,QAAS,CAAEgC,MAAQhC,EAAQnB,aAC3BoD,SAAU,KAPd,SASI,eAACZ,EAAA,EAAD,CAAKI,UAAWzB,EAAQkC,IAAKC,EAAG,EAAhC,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,2BAAhB,SAA2C,cAACtE,EAAD,yBAC3C,cAACsD,EAAA,EAAD,CAAKiB,QAAQ,OAAb,SACI,eAACjB,EAAA,EAAD,CAAKkB,EAAG,EAAGC,SAAU,EAArB,UACI,cAACC,EAAA,EAAD,CACIC,KAAK,SACLC,WAAW,EACXC,MAAO1C,EACP2C,SAAU,SAAAC,GAAC,OAAI3C,EAAU2C,EAAEC,OAAOH,QAClCI,MAAM,WACR,eAACC,EAAA,EAAD,CAAgBZ,GAAG,iBAAnB,0BAAkDnB,WAAWP,EAAKQ,SAASC,QAAQ,GAAnF,YAIV,cAACC,EAAA,EAAD,CAAKiB,QAAQ,OAAb,SACI,eAACjB,EAAA,EAAD,CAAKkB,EAAG,EAAGC,SAAU,EAArB,UACI,cAACC,EAAA,EAAD,CACIE,WAAW,EACXC,MAAOxC,EACPyC,SAAU,SAAAC,GAAC,OAAIzC,EAAYyC,EAAEC,OAAOH,QACpCI,MAAM,aACR,cAACC,EAAA,EAAD,CAAgBZ,GAAG,iBAAnB,iCAIV,cAAChB,EAAA,EAAD,CAAKC,GAAI,EAAG9D,MAAM,SAAlB,SACI,cAAC+D,EAAA,EAAD,CAAQC,QA/KR,WAChB,GAAkB,MAAfb,EAAKwC,OAAgB,CACpB,GAAGjD,GAAUE,EACT,IAAK,IAQc4F,EARf,uCAQA,gCAAA3C,EAAA,+EAE+BC,EAAW2C,SAAS,CACvC/F,OAAQA,EACRqD,SAAUC,SAAOC,MAJ7B,cAEcwC,EAFd,OAOQvC,QAAQC,IAAI,oBAAqBsC,GAPzC,SASkC3C,EAAWJ,QAAQ,CAAEU,WAAY,CAAEJ,SAAOC,OAT5E,cAScI,EATd,iBAU6BP,EAAWQ,OAAO,CAAEF,WAAY,CAAEJ,SAAOC,OAVtE,eAUcK,EAVd,OAYQjD,EAAUoF,EAASlC,QACnBjD,EAASmF,EAASjC,OAClBjD,EAAakF,EAAShC,UAAU,GAAGC,QAEnCC,IAAMC,KAAN,mEAAuEzD,EAAKwC,OAA5E,iBAAmG,CAC/FA,OAAQxC,EAAKwC,OACbkB,iBAAiB,WACjBnE,QAA6B,EAApBgG,KAAKC,IAAIjG,GAClBgE,OAAQ+B,EAAShC,UAAU,GAAGC,SAGlCC,IAAMG,IAAN,4DAA+D3D,EAAKwC,SACnEoB,MAAK,SAAAC,GACF5D,EAAQ,CACJ6D,YAAavD,WAAWsD,EAAKE,KAAKC,WAAY,IAAMzD,WAAWhB,EAAQ,IACvEgD,QAASW,EAAYe,SAAS,GAAGC,gBACjC1D,QAAS0C,EAAYe,SAAS,GAAGE,gBACjChG,OAAQ+E,EAAY/E,OACpBiG,UAAWjB,EAAOkB,QAAQ,GAAGD,UAC7BE,IAAKnB,EAAOkB,QAAQ,GAAGC,IACvBC,OAAQrB,EAAYe,SAAS,GAAGE,iBAAmB5D,WAAWsD,EAAKE,KAAKC,WAAY,IAAMzD,WAAWhB,EAAQ,KAC7GiD,OAAQxC,EAAKwC,YAGpBgC,OAAM,SAAAC,GACH1B,QAAQC,IAAKyB,EAAK,4BArC9B,UAwCcjB,IAAMkB,MAAN,4DAAiE1E,EAAKwC,QAAU,CAClFwB,WAAczD,WAAWP,EAAK8D,YAAa,IAAMvD,WAAWhB,EAAQ,MACrEqE,MAAK,SAAAC,GACJd,QAAQC,IAAI,4BACbwB,OAAM,SAAAC,GACL1B,QAAQC,IAAKyB,EAAK,0BA7C9B,0DAiDQE,MAAM,EAAD,IAjDb,0DARA,qDACMhC,EAAa,IAAIiC,aAAW,CAC9BC,MAAOC,SAAOC,MACdC,QAASC,WAASC,aAClBC,QAASnF,EAAKwC,OACd4C,SAAU3F,IAuDd4F,IACF,MAAMZ,GACJE,MAAMF,QAGVE,MAAM,WAEVrE,SAEAqE,MAAM,kBACNrE,KAsG0C1D,QAAQ,YAAYkE,UAAWzB,EAAQxB,OAAQkD,KAAK,QAAQ3E,MAAM,UAAhG,gCC3UxB,IAAMqJ,EAAsBvJ,YAAW,CACnCC,KAAM,CACFC,MAAOC,IAAM,OAFOH,CAIvBS,KAEU,SAAS+I,EAAmBhJ,GAEvC,OACI,qCACI,cAACU,EAAD,4BACA,eAACqI,EAAD,CAAqB7I,QAAQ,KAAKU,UAAU,KAA5C,UACKiD,WAA4B,IAAjB7D,EAAMiJ,UAAgBlF,QAAQ,GAD9C,U,iCCLN/C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgI,eAAgB,CACZtH,KAAM,GAEVT,OAAQ,CAEJE,aAAc,GACdC,MAAO,MACPC,QAAS,EACT7B,MAAOyJ,KAAO,UAIhBC,GAAoB5J,aAAW,SAAC0B,GAAD,MAAY,KAAvB1B,CAUtB6J,KAEW,SAASC,GAAetJ,GACnC,IAAM2C,EAAU3B,KAChB,EAAkCqB,IAAMO,SAAS,OAAjD,mBAAO2G,EAAP,KAAkBC,EAAlB,KACA,EAAiB5G,mBAAS,QAA1B,mBAAOoD,EAAP,KAAUyD,EAAV,KACA,EAAwBpG,qBAAWvC,GAAnC,mBAAOwC,EAAP,UAqBA,OACI,qCACI,cAAC5C,EAAD,gCACA,eAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,gBAAgBkB,UAAU,IAAzD,UACKiD,WAAWmC,GAAGjC,QAAQ,GAD3B,UAGA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAG9D,MAAM,SAAlB,SACI,eAACuJ,GAAA,EAAD,CAAmBrF,KAAK,QAAQkB,MAAOgE,EAAWI,WAAS,EAACnE,SA1BnD,SAACoE,EAAOC,GAC3BL,EAAaK,IAyBH,UACI,cAACT,GAAD,CAAmBhF,UAAWzB,EAAQxB,OAAQgD,QAvB3C,WACfsF,EAAKzJ,EAAM8J,IAAMxG,EAAK8D,cAsByD7B,MAAM,OAAO7F,MAAM,UAAtF,SACI,cAACO,EAAA,EAAD,CAAYI,SAAS,OAAOX,MAAM,gBAAlC,oBAEJ,cAAC0J,GAAD,CAAmBhF,UAAWzB,EAAQxB,OAAQgD,QAvB1C,WAChBsF,EAAMzJ,EAAM8J,IAAMxG,EAAK8D,YAAa,KAsB4C7B,MAAM,QAA1E,SACI,cAACtF,EAAA,EAAD,CAAYI,SAAS,OAAOX,MAAM,gBAAlC,qBAEJ,cAAC0J,GAAD,CAAmBhF,UAAWzB,EAAQxB,OAAQgD,QAvB3C,WACfsF,EAAMzJ,EAAM8J,IAAMxG,EAAK8D,YAAa,KAsB2C7B,MAAM,OAAzE,SACI,cAACtF,EAAA,EAAD,CAAYI,SAAS,OAAOX,MAAM,gBAAlC,oBAEJ,cAAC0J,GAAD,CAAmBhF,UAAWzB,EAAQxB,OAAQgD,QAvB5C,WACdsF,EAAMzJ,EAAM8J,IAAMxG,EAAK8D,YAAa,MAsB0C7B,MAAM,MAAxE,SACI,cAACtF,EAAA,EAAD,CAAYI,SAAS,OAAOX,MAAM,gBAAlC,2B,gECnElBqK,GAAU,CACZ,CAAE/E,GAAI,SAAUW,MAAM,SAAUf,SAAU,GAC1C,CAAEI,GAAI,mBAAoBW,MAAM,cAAeqE,SAAU,GACzD,CAAEhF,GAAI,SAAUW,MAAO,SAAUqE,SAAU,IAC3C,CAAEhF,GAAI,OAAQW,MAAO,OAAQqE,SAAU,GAAI7J,MAAO,UAGlD8J,GAAW,GAETjJ,GAAYC,YAAW,CAC7BxB,KAAM,CACF6B,MAAO,QAEX4I,UAAW,CACPC,UAAW,OAIA,SAASC,GAAapK,GACjC,IAAM2C,EAAU3B,KAChB,EAAwBqB,IAAMO,SAAS,GAAvC,mBAAOyH,EAAP,KAAaC,EAAb,KACA,EAAsCjI,IAAMO,SAAS,GAArD,mBAAO2H,EAAP,KAAoBC,EAApB,KACA,EAAwBnH,qBAAWvC,GAAnC,mBAAOwC,EAAP,UAoDA,OAxCAmH,qBAAU,WAGN,GAFApE,QAAQC,IAAItG,EAAMuF,OAEdvF,EAAMuF,MAAM,CAIRuB,IAAMG,IAAN,mEAAsE3D,EAAKwC,SAC1EoB,MAAK,SAAAC,GAEF,IAAK,IAAIuD,EAAI,EAAGA,EAAIvD,EAAKE,KAAKsD,OAAQD,IAAK,CAAC,IAalCE,EAAU,CACZ/H,OAAQsE,EAAKE,KAAKqD,GAAG7H,OACrBmE,iBAAkBG,EAAKE,KAAKqD,GAAG1D,iBAC/BH,OAdJ,SAAiBgE,GACb,IAAIC,EAAMD,EACNE,EAAMD,EAAIE,UAAU,EAAE,GACtBC,EAAYH,EAAIH,OAChBO,EAAUJ,EAAIE,UAAWC,EAAU,EAAIA,GAEvCE,EAAG,qDAAiDN,GACpDO,EAAkBL,EAAO,MAAQG,EACrC,OAAO,cAAC5K,EAAA,EAAD,CAAMC,KAAM4K,EAAZ,SAAkBC,IAMhBC,CAAQlE,EAAKE,KAAKqD,GAAG7D,QAC9ByE,KAAMnE,EAAKE,KAAKqD,GAAGa,YAEvBtB,GAASuB,KAAKZ,UAQhC,CAAC5K,EAAMuF,MAAOjC,EAAKwC,SAIjB,qCACI,cAACpF,EAAD,kCACA,eAAC+K,EAAA,EAAD,CAAOrH,UAAWzB,EAAQlD,KAA1B,UACI,cAACiM,GAAA,EAAD,CAAgBtH,UAAWzB,EAAQuH,UAAnC,SACI,cAACyB,GAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,SACA,cAACC,GAAA,EAAD,UACK7B,GAAS8B,MAAM1B,EAAOE,EAAaF,EAAOE,EAAcA,GAAayB,KAAI,SAACC,GAC3E,OACI,cAACC,GAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACCtC,GAAQiC,KAAI,SAACM,GACV,IAAM/G,EAAQ0G,EAAIK,EAAOtH,IACzB,OACA,cAACuH,GAAA,EAAD,CAA2BpM,MAAOmM,EAAOnM,MAAzC,SACKmM,EAAOE,QAA2B,kBAAVjH,EAAqB+G,EAAOE,OAAOjH,GAASA,GADzD+G,EAAOtH,QAJwBiH,EAAIQ,eAenE,cAACC,GAAA,EAAD,CACQC,iBAAmB,GACnBC,mBAAoB,CAAC,EAAG,GAAI,KAC5BhM,UAAU,MACViM,MAAO5C,GAASU,OAChBJ,YAAaA,EACbF,KAAMA,EACNyC,aAhFK,SAAClD,EAAOmD,GAC7BzC,EAAQyC,IAgFQC,oBA7EY,SAACpD,GAC7BY,GAAgBZ,EAAMlE,OAAOH,OAC7B+E,EAAQ,YC3CT,IAAM2C,GAAclM,wBAAc,MCA5BmM,GAAqBnM,wBAAc,MCAnCoM,GAAgBpM,wBAAc,MCsBrCC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCzB,KAAM,CACF0F,SAAU,GAEdiI,WAAY,CACRC,YAAanM,EAAMoM,QAAQ,IAE/BC,MAAO,CACHpI,SAAU,EACVqI,UAAW,QAEfC,UAAW,CACPtI,SAAU,EACVqI,UAAW,UAEfpM,OAAQ,CACJA,OAAQF,EAAMoM,QAAQ,KAE1BI,mBAAoB,CAChBrM,aAAc,IAGlBsM,gBAAiB,CACblM,OAAQ,IACRJ,aAAc,IAElBuM,aAAc,CACVxM,OAAQF,EAAMoM,QAAQ,MAE1BO,QAAS,CACL1I,SAAU,EACV1D,OAAQ,QACRqM,SAAU,QAEd5D,UAAW,CACP6D,WAAY7M,EAAMoM,QAAQ,GAC1BU,cAAe9M,EAAMoM,QAAQ,IAEjC3I,MAAO,CACHpD,QAASL,EAAMoM,QAAQ,GACvBrI,QAAS,OACT6I,SAAU,OACVG,cAAe,UAEnBC,YAAa,CACTzM,OAAQ,IACRJ,aAAc,IAElB8M,MAAM,aACFC,MAAO,GACNlN,EAAMe,YAAYoM,GAAG,MAAQ,CAC1BD,MAAO,IAGfE,MAAM,aACFF,MAAO,GACNlN,EAAMe,YAAYoM,GAAG,MAAQ,CAC1BD,MAAO,IAGfG,iBAAkB,CACd9M,OAAQ,OACRJ,aAAc,QAKhBmN,GAAWhP,YAAW,CACxBC,KAAM,CACFC,MAAOI,IAAI,OAFFN,CAIdiP,KAEGC,GAAalP,YAAW,CAC1BC,KAAM,CACFC,MAAOC,IAAM,OAFFH,CAIhBmP,KAkFYC,GA/EF,WACT,IAAMjM,EAAU3B,KAChB,EAAwBqC,qBAAWvC,GAAnC,mBAAOwC,EAAP,KACA,GADA,KAC8BD,qBAAW8J,KAAzC,6BAGA,OACI,sBAAK/I,UAAWzB,EAAQkL,QAAxB,UACI,qBAAKzJ,UAAWzB,EAAQiL,eAExB,cAACiB,EAAA,EAAD,CAAWjK,SAAS,KAAKR,UAAWzB,EAAQuH,UAA5C,SACI,eAAC4E,EAAA,EAAD,CAAM5E,WAAS,EAACoD,QAAS,EAAzB,UACI,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,eAACzD,EAAA,EAAD,CAAOrH,UAAWzB,EAAQ+K,mBAAoByB,UAAW,EAAzD,UACI,eAAClP,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,gBAA0D,cAACe,GAAD,OAC1D,cAACvO,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,SAAwD5J,WAAWP,EAAKuC,SAAS9B,QAAQ,UAGjG,cAAC+K,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,eAACzD,EAAA,EAAD,CAAOrH,UAAWzB,EAAQ+K,mBAAoByB,UAAW,EAAzD,UACI,eAAClP,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,iBAA2D,cAACiB,GAAD,OAC3D,cAACzO,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,SAAwD5J,WAAWP,EAAKQ,SAASC,QAAQ,UAGjG,cAAC+K,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,eAACzD,EAAA,EAAD,CAAOrH,UAAWzB,EAAQ+K,mBAAoByB,UAAW,EAAzD,UACI,cAAClP,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,oBACA,cAACxN,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,SAAwD5J,WAAWP,EAAKuE,QAAQ9D,QAAQ,eAMxG,cAAC8K,EAAA,EAAD,CAAWjK,SAAS,KAAKR,UAAWzB,EAAQuH,UAA5C,SACI,eAAC4E,EAAA,EAAD,CAAM5E,WAAS,EAACoD,QAAS,EAAzB,UAGI,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACE,EAAA,EAAD,CAAMD,UAAW,EAAG/K,UAAWzB,EAAQgL,gBAAvC,SACI,cAAC0B,EAAA,EAAD,UACI,cAAC,EAAD,CAAcvL,QAASR,EAAK8D,oBAMxC,cAAC0H,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACE,EAAA,EAAD,CAAMD,UAAW,EAAG/K,UAAWzB,EAAQgL,gBAAvC,SACI,cAAC0B,EAAA,EAAD,UACI,cAAC,EAAD,CAAepG,SAAU3F,EAAKsE,YAM1C,cAACkH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG9K,UAAWzB,EAAQwL,MAApD,SACI,cAACiB,EAAA,EAAD,CAAMD,UAAW,EAAG/K,UAAWzB,EAAQ4L,iBAAvC,SACI,cAACc,EAAA,EAAD,UACI,cAAC,GAAD,CAAmB9J,OAAO,UAMtC,cAACuJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG9K,UAAWzB,EAAQ2L,MAApD,SACI,cAACc,EAAA,EAAD,CAAMD,UAAW,EAAI/K,UAAWzB,EAAQ4L,iBAAxC,SACI,cAACc,EAAA,EAAD,UACI,cAAC,GAAD,CAAevF,IAAKxG,EAAKsE,iBAO7C,cAAC,EAAD,CAAWxH,YAAakD,EAAK7B,a,kIC9JnCT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCzB,KAAM,CACF0F,SAAU,GAEdiI,WAAY,CACRC,YAAanM,EAAMoM,QAAQ,IAE/BC,MAAO,CACHpI,SAAU,EACVqI,UAAW,QAEfpM,OAAQ,CACJA,OAAQF,EAAMoM,QAAQ,KAE1BY,YAAa,CACTzM,OAAQ,KAEZmM,aAAc1M,EAAMoO,OAAOC,QAE3BC,KAAM,CACF5K,SAAU,GACVyI,YAAa,QAEjBI,UAAW,CACPD,UAAW,UAEfK,QAAS,CACL4B,gBAAiB,WAErBzN,OAAO,eACFd,EAAMe,YAAYC,KAAK,MAAQ,CAC5B,0CAA2C,CACvCd,OAAQ,UACRC,aAAc,OACdI,OAAQ,QAERU,UAAW,mCAIvBX,YAAa,CACTC,OAAS,OACTH,MAAQ,QACRD,aAAe,QAGnBF,OAAQ,CACJC,OAAQ,GACRC,aAAc,IAIlBqO,aAAc,CACVtO,OAAQ,GACRC,aAAc,GACdC,MAAO,OACPC,QAAS,GAEbG,MAAO,CACHC,WAAYT,EAAMoM,QAAQ,GAC1B1L,KAAM,GAEV+N,KAAO,CACH/N,KAAM,EACN4L,UAAW,SACXoC,aAAc,UAElBC,QAAS,CACLC,cAAe,YAMjB1N,GAAaC,IAAMC,YAAW,SAAoBtC,EAAOuC,GAC3D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASvC,OA8LhC+P,GA3LS,SAAC/P,GACrB,IAAM2C,EAAU3B,KAChB,EAAwBqC,qBAAWvC,GAAnC,mBAAayC,GAAb,WACA,EAuEA,SAAyByM,EAAKC,GAG9B,MAAsCrN,oBAAS,WAC3C,IAEA,IAAMmM,EAAOmB,OAAOC,aAAaC,QAAQJ,GAEzC,OAAOjB,EAAOsB,KAAKC,MAAMvB,GAAQkB,EAC/B,MAAOM,GAGT,OADAlK,QAAQC,IAAIiK,GACLN,MATX,mBAAOO,EAAP,KAAoBC,EAApB,KA4BA,MAAO,CAACD,EAdS,SAACjL,GACd,IAEA,IAAMmL,EACFnL,aAAiBoL,SAAWpL,EAAMiL,GAAejL,EAErDkL,EAAeC,GAEfR,OAAOC,aAAaS,QAAQZ,EAAKK,KAAKQ,UAAUH,IAC9C,MAAOH,GAETlK,QAAQC,IAAIiK,MAnGYO,CAAgB,iBAAkB,IAA9D,mBAAOhL,EAAP,KAAeiL,EAAf,KACA,EAAoCnO,oBAAS,GAA7C,mBAAOoO,EAAP,KAAmBC,EAAnB,KAEMC,EAAwB,WAC1BD,GAAeD,IAiBnBvG,qBAAU,WAIN,GAFAsG,EAAU,CAACtI,QAAS,iDAEjB3C,EAAO2C,QAAQ,CAAC,IAQA0I,EARD,uCAQd,8BAAAnL,EAAA,sEAC8BC,EAAWJ,QAAQ,CAAEU,WAAY,CAAEJ,SAAOC,OADxE,cACUI,EADV,gBAEyBP,EAAWQ,OAAO,CAAEF,WAAY,CAAEJ,SAAOC,OAFlE,cAEUK,EAFV,gBAIUK,IAAMC,KAAN,oDAAgE,CAClEjB,OAAQA,EAAO2C,QACfnB,WAAY,IACbJ,MAAK,SAAAC,OAGPW,OAAM,SAAAC,GACH1B,QAAQC,IAAK,8CAXrB,wBAcUQ,IAAMG,IAAN,4DAA+DnB,EAAO2C,UACvEvB,MAAK,SAAAC,GAEF5D,EAAQ,CACJsC,QAASW,EAAYe,SAAS,GAAGC,gBACjC1D,QAAS0C,EAAYe,SAAS,GAAGE,gBACjChG,OAAQ+E,EAAY/E,OACpBiG,UAAWjB,EAAOkB,QAAQ,GAAGD,UAC7BE,IAAKnB,EAAOkB,QAAQ,GAAGC,IACvB9B,OAAQA,EAAO2C,QACfZ,OAAQrB,EAAYe,SAAS,GAAGE,gBAAkBN,EAAKE,KAAKC,WAC5DF,YAAaD,EAAKE,KAAKC,gBAG9BQ,OAAM,SAAAC,GACH1B,QAAQC,IAAK,wBA7BzB,4CARc,qDACRL,EAAa,IAAIiC,aAAW,CAC9BkJ,KAAM,UACNjJ,MAAOC,SAAOC,MACdC,QAASC,WAASC,aAClBC,QAAS3C,EAAO2C,UAoCpB0I,OAEL,IAqCiB3R,aAAW,SAAC0B,GAAD,YAAY,CACvCzB,MAAI,GACAC,MAAOwB,EAAMmQ,QAAQC,gBAAgB3R,IAAM,MAC3C4R,YAAa5R,IAAM,MAFnB,sBAGOA,IAAM,MAHb,cAIA,UAAW,CACP8P,gBAAiB9P,IAAM,KACvBD,MAAO,SANX,MADYF,CAUhB0E,KAEJ,OACI,qCACI,cAACsN,GAAA,EAAD,CACI3F,aAAW,0BACX4F,gBAAc,cACdC,gBAAc,OACdvN,QApHI,WACZ,IAAMwN,EAAM,IAAIC,aAChBD,EAAIE,UACJF,EAAIG,GAAG,YAAaf,IAkHZrR,MAAM,UALV,SAOI,cAAC,KAAD,MAYJ,cAAC4E,EAAA,EAAD,CACIF,UAAWzB,EAAQX,OACnBuC,KAAMyM,EACNxM,oBAAqBpC,GACrBqC,aAAW,EACXC,QAASwM,EACTvO,QAAS,CAAEgC,MAAQhC,EAAQnB,aAC3BoD,SAAU,KAPd,SASI,cAACZ,EAAA,EAAD,CAAKI,UAAWzB,EAAQkC,IAAKC,EAAG,EAAhC,SACI,eAAC+J,EAAA,EAAD,CAAWjK,SAAS,KAAKR,UAAWzB,EAAQuH,UAA5C,UACI,cAAC4E,EAAA,EAAD,CAAM5E,WAAS,EAACoD,QAAS,EAAzB,SACI,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACI,cAACjP,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQ8K,UAA5C,SAAuD,cAAC/M,EAAD,mCAI/D,cAACoO,EAAA,EAAD,CAAM5E,WAAS,EAACoD,QAAS,EAAzB,SACI,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI9K,UAAWzB,EAAQgN,KAAtD,SACI,eAAC3L,EAAA,EAAD,CAAKiB,QAAQ,OAAO8M,eAAe,gBAAnC,UACI,cAAC3M,EAAA,EAAD,CACIO,MAAM,iBACNqM,WAAY,CAAE5N,UAAWzB,EAAQsP,UACjCC,MAAQ,CAAC5Q,MAAO,SAIxB,cAAC4C,EAAA,EAAD,CACIC,QArJP,WACrB+M,KAqJ4B7M,KAAK,SACLnE,QAAQ,YACRR,MAAM,UACN0E,UAAWzB,EAAQxB,OACnBgR,QAAS,cAAC,KAAD,IANb,sC,yCC1NjBC,GAtCE,SAACpS,GACd,MAAgCqC,IAAMO,SAAS,MAA/C,mBAAOyP,EAAP,KAAiBC,EAAjB,KAYA,OACI,qCACI,cAACd,GAAA,EAAD,CACI3F,aAAW,0BACX4F,gBAAc,cACdC,gBAAc,OACdvN,QAfQ,SAACyF,GACjB0I,EAAY1I,EAAM2I,gBAeV7S,MAAM,UALV,SAOI,cAAC,KAAD,MAEJ,eAAC8S,GAAA,EAAD,CACIxN,GAAG,cACHqN,SAAUA,EACV5N,aAAW,EACXF,KAAMkO,QAAQJ,GACd3N,QArBQ,SAACgO,GACjBJ,EAAY,OAeR,UAOI,cAACK,GAAA,EAAD,CAAU/R,UAAU,IAAIL,KAAK,QAA7B,kBACA,cAACoS,GAAA,EAAD,CAAU/R,UAAU,IAAIL,KAAK,IAA7B,yBC1CD,OAA0B,iCCyB/BS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACjCzB,KAAM,CACF0F,SAAU,GAGdiI,WAAY,CACRC,YAAanM,EAAMoM,QAAQ,IAE/BC,MAAO,CACHqF,WAAY,EACZpF,UAAW,QAEfqF,WAAY,CACR1N,SAAU,EACV/D,OAAQF,EAAMoM,QAAQ,KACtBE,UAAW,UAEfpM,OAAQ,CACJA,OAAQF,EAAMoM,QAAQ,KAE1BY,YAAa,CACTzM,OAAQ,KAEZ+N,KAAM,CACF5K,SAAU,KAEdgJ,aAAc1M,EAAMoO,OAAOC,YAI7BuD,GAAatT,YAAW,CACtBC,KAAM,CACFC,MAAOC,IAAM,KACb,YAAa,CACTD,MAAOC,IAAM,OAGrBoT,QAAS,IAPEvT,EAQhB,SAACQ,GAAD,OAAW,cAACgT,GAAA,EAAD,aAAOtT,MAAM,WAAcM,OAEnCiT,GAAYzT,YAAW,CACrBC,KAAM,CACNC,MAAOwT,KAAK,KACZ,YAAa,CACTxT,MAAOwT,KAAK,OAGhBH,QAAS,IAPCvT,EAQf,SAACQ,GAAD,OAAW,cAACgT,GAAA,EAAD,aAAOtT,MAAM,WAAcM,OAE1B,SAASmT,KAEpB,MAAkCvQ,oBAAS,GAA3C,mBAAOwQ,EAAP,KAAkBC,EAAlB,KACMC,EAAaF,EAAY,OAAS,QAClCG,EAAmBH,EAAY,UAAY,UAC3CI,EAAqBJ,EAAY,UAAY,UAE7CK,EAAYC,aAAe,CAC7BrC,QAAS,CACThM,KAAMiO,EACFK,QAAS,CACLC,KAAML,GAEVM,UAAW,CACPD,KAAMJ,MAIlB,EAA0CnR,IAAMO,SAAS,WAAzD,mBAAOkR,EAAP,KAAsBC,EAAtB,KACMpR,EAAU3B,KAChB,EAAwBqB,IAAMO,UAAS,GAAvC,mBAAOoR,EAAP,KAAaC,EAAb,KACA,EAAgC5R,IAAMO,SAAS,MAA/C,mBAAOyP,EAAP,KAAiBC,EAAjB,KACM/N,EAAOkO,QAAQJ,GAMf6B,EAAsB,SAACtK,GACzBmK,EAAiBnK,EAAMlE,OAAOH,QAetC,OACI,cAAC4O,GAAA,EAAD,CAAejT,MAAOuS,EAAtB,SACI,sBAAKrP,UAAWzB,EAAQlD,KAAxB,UACI,eAAC2U,GAAA,EAAD,CAAWnI,KAAG,EAAd,UACI,cAACoI,GAAA,EAAD,CAEIC,QAAS,cAACC,GAAA,EAAD,CAAQxB,QAASiB,EAAMxO,SAlB3B,SAACoE,GAClBqK,EAAQrK,EAAMlE,OAAOqN,UAiB+ClH,aAAW,iBACnElG,MAAOqO,EAAO,aAAe,mBAGhCA,GACG,gCACI,cAACK,GAAA,EAAD,CACIC,QAAS,cAACrB,GAAD,CACLF,QAA2B,YAAlBe,EACTtO,SAAU0O,EACV3O,MAAM,UACN6L,KAAK,oBACLY,WAAY,CAAE,aAAc,WAC5B3N,KAAK,UAETsB,MAAM,YAEV,cAAC0O,GAAA,EAAD,CACIC,QAAS,cAACxB,GAAD,CACLC,QAA2B,aAAlBe,EACTtO,SAAU0O,EACV3O,MAAM,WACN6L,KAAK,oBACLY,WAAY,CAAE,aAAc,YAC5B3N,KAAK,UAETsB,MAAM,mBAMtB,cAAC6O,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,GAAA,EAAD,WAEI,eAACzU,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,UAAWzB,EAAQkQ,WAA5C,6BAAwE,qBAAK8B,IAAKC,GAAMC,IAAI,eAAezQ,UAAWzB,EAAQ6M,UAE9H,cAAC+E,GAAA,EAAD,CAAQxB,QAASK,EAAW5N,SA/DlB,WACtB6N,GAAcD,MA+DDY,GACG,cAAC,GAAD,CAAgBc,WArDjB,SAAClL,GAChB0I,EAAY1I,EAAM2I,gBAoDsCF,SAAUA,EAAU9N,KAAMA,EAAMwQ,YAjDxE,WAChBzC,EAAY,SAkDI,cAAC,GAAD,cCzJ5B,IAAMtR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACjCzB,KAAM,CACF0F,SAAU,GAEdsK,gBAAiBvO,EAAMmQ,QAAQ2D,WAAWrQ,UAoCnCsQ,OAhCf,WAEI,MAA0BrS,mBAAS,MAAnC,mBAAO2C,EAAP,KAAc2P,EAAd,KACA,EAAwBtS,mBAAS,CAAC,OAAlC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAsCX,mBAAS,MAA/C,mBAAOuS,EAAP,KAAoBC,EAApB,KACA,EAA8BxS,mBAAS,MAAvC,mBAAOyS,EAAP,KAAgBC,EAAhB,KACM3S,EAAU3B,KAEhB,OACI,cAAC,IAAD,UACI,qBAAKoD,UAAWzB,EAAQlD,KAAxB,SACI,cAACwN,GAAYsI,SAAb,CAAsBhQ,MAAO,CAACA,EAAO2P,GAArC,SACI,cAAChI,GAAmBqI,SAApB,CAA6BhQ,MAAO,CAAC4P,EAAaC,GAAlD,SACI,cAACtU,EAAYyU,SAAb,CAAsBhQ,MAAO,CAACjC,EAAMC,GAApC,SACI,eAAC4J,GAAcoI,SAAf,CAAwBhQ,MAAO,CAAC8P,EAASC,GAAzC,UACI,cAAC,IAAD,CAAOE,KAAK,QAAZ,SACI,cAACrC,GAAD,MAEJ,eAAC,IAAD,CAAOsC,OAAK,EAACD,KAAK,IAAlB,UACI,cAACrC,GAAD,IACA,cAAC,GAAD,qB,OCnCpCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82d5e855.chunk.js","sourcesContent":["import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst DotGreen = withStyles({\r\n    root: {\r\n        color: green[400]\r\n    }\r\n})(FiberManualRecordIcon);\r\n\r\nconst DotRed = withStyles({\r\n    root: {\r\n        color: red[400]\r\n    }\r\n})(FiberManualRecordIcon);\r\n\r\nconst Copyright = (props) => {\r\n    return (\r\n        <> \r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {props.blockHeight \r\n                ? \r\n                    <DotGreen fontSize=\"small\" color=\"action\" />  \r\n                :\r\n                    <DotRed fontSize=\"small\" color=\"action\" />  \r\n                }\r\n                BLOCK HEIGHT: {props.blockHeight}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {\"Copyright © \"}\r\n                <Link color=\"inherit\" href=\"https://anchor.gold/\">\r\n                Anchor Gold\r\n                </Link>{\" \"}\r\n                {new Date().getFullYear()}\r\n                {\".\"}\r\n            </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Copyright\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport const InfoContext = createContext(null);","import React, {useState, useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { Button } from '@material-ui/core'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InfoContext } from './context/InfoContext'\r\nimport {AnchorEarn, CHAINS, NETWORKS, DENOMS} from '@anchor-protocol/anchor-earn';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: 10,\r\n        borderRadius: 20,\r\n        width: '40%',\r\n        padding: 5\r\n    },\r\n    dialogPaper: {\r\n        height : 'auto',\r\n        width : '800px',\r\n        borderRadius : '25px',\r\n\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n    buttonDeposit: {\r\n        margin: 10,\r\n        borderRadius: 20,\r\n        width: '20%',\r\n        padding: 5,\r\n    },\r\n    dialog: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            \"& .MuiDialog-container .MuiDialog-paper\": {\r\n                margin: \"0px 0px\",\r\n                borderRadius: '25px',\r\n                height: '440px',\r\n                // position: \"absolute\", left: \"0%\", top: \"50%\", transform: \"translate(-75%,-50%)\"\r\n                transform: \"translate(0%, 30%) !important\"\r\n            },\r\n        }\r\n    },\r\n    \r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Total_Deposit(props) {\r\n    const classes = useStyles();\r\n    const [amount, setAmount] = useState();\r\n    const [mnenmonic, setMnemonic] = useState('');\r\n    const [openDeposit, setOpenDeposit] = useState(false);\r\n    const [openWithdraw, setOpenWithdraw] = useState(false);\r\n    const [info, setInfo] = useContext(InfoContext);\r\n    const [status, setStatus] = useState();\r\n    const [txFee, setTxFee] = useState();\r\n    const [txDetails, setTxDetails] = useState()\r\n\r\n    const handleClickOpenDeposit = () => {\r\n        setOpenDeposit(!openDeposit);\r\n        setAmount('')\r\n        setMnemonic('')\r\n    };\r\n    \r\n    const handleClickOpenWithdraw = () => {\r\n        setOpenWithdraw(!openWithdraw);\r\n        setAmount('')\r\n        setMnemonic('')\r\n    };\r\n\r\n    const addDeposit = () => {\r\n        if(info.wallet != null) {\r\n            if(amount && mnenmonic) {\r\n                try {\r\n                    const anchorEarn = new AnchorEarn({\r\n                        chain: CHAINS.TERRA,\r\n                        network: NETWORKS.TEQUILA_0004,\r\n                        address: info.wallet,\r\n                        mnemonic: mnenmonic\r\n                    });\r\n\r\n                    async function depositData() {\r\n                        try {\r\n                            const deposit = await anchorEarn.deposit({\r\n                                amount: amount, \r\n                                currency: DENOMS.UST\r\n                            });\r\n\r\n                            console.log(\"TXOUTPUT-DEPOSIT\", deposit)\r\n\r\n                            const balanceInfo = await anchorEarn.balance({ currencies: [ DENOMS.UST ] });\r\n                            const market = await anchorEarn.market({ currencies: [ DENOMS.UST ] });\r\n        \r\n                            setStatus(deposit.status)\r\n                            setTxFee(deposit.txFee)\r\n                            setTxDetails(deposit.txDetails[0].txHash)\r\n\r\n                            Axios.post(`https://anchorgold-server.herokuapp.com/api/transactions/${info.wallet}/transactions`, {\r\n                                wallet: info.wallet,\r\n                                transaction_type:\"deposit\",\r\n                                amount: amount,\r\n                                txHash: deposit.txDetails[0].txHash\r\n                            })\r\n                            \r\n                            Axios.get(`https://anchorgold-server.herokuapp.com/api/users/${info.wallet}`)\r\n                            .then(resp => {\r\n                                setInfo({ \r\n                                    initBalance: parseFloat(resp.data.ustBalance, 10) + parseFloat(amount, 10),\r\n                                    balance: balanceInfo.balances[0].account_balance,\r\n                                    deposit: balanceInfo.balances[0].deposit_balance,\r\n                                    height: balanceInfo.height,\r\n                                    liquidity: market.markets[0].liquidity,\r\n                                    APY: market.markets[0].APY,\r\n                                    reward: balanceInfo.balances[0].deposit_balance - (parseFloat(resp.data.ustBalance, 10) + parseFloat(amount, 10)),\r\n                                    wallet: info.wallet\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                console.log( err, \"ERROR GETTING BALANCE\")\r\n                            })\r\n\r\n                            await Axios.patch(`https://anchorgold-server.herokuapp.com/api/users/${info.wallet}`, {\r\n                                ustBalance :  parseFloat(info.initBalance, 10) + parseFloat(amount, 10)\r\n                            }).then(resp => {\r\n                                console.log('DEPOSITED SUCCESSFULLY')\r\n                            }).catch(err => {\r\n                                console.log( err, 'SUM FUCKED UP ERROR')\r\n                            })\r\n                        } catch (err) {\r\n                            alert(err)\r\n                        }\r\n                    }\r\n                    depositData(); \r\n                } catch(err) {\r\n                    alert(err)\r\n                }\r\n            } else {\r\n                alert('No data')\r\n            }\r\n            handleClickOpenDeposit()\r\n        } else {\r\n            alert('Connect Wallet')\r\n            handleClickOpenDeposit()\r\n        }\r\n    }\r\n\r\n\r\n    const addWithdraw = () => {\r\n        if(info.wallet != null) {\r\n            if(amount && mnenmonic) {\r\n                try {\r\n                    const anchorEarn = new AnchorEarn({\r\n                        chain: CHAINS.TERRA,\r\n                        network: NETWORKS.TEQUILA_0004,\r\n                        address: info.wallet,\r\n                        mnemonic: mnenmonic\r\n                    });\r\n\r\n                    async function withdrawData() {\r\n                        try {\r\n                            const withdraw = await anchorEarn.withdraw({\r\n                                amount: amount, \r\n                                currency: DENOMS.UST\r\n                            });\r\n\r\n                            console.log(\"TXOUTPUT-withdraw\", withdraw)\r\n\r\n                            const balanceInfo = await anchorEarn.balance({ currencies: [ DENOMS.UST ] });\r\n                            const market = await anchorEarn.market({ currencies: [ DENOMS.UST ] });\r\n        \r\n                            setStatus(withdraw.status)\r\n                            setTxFee(withdraw.txFee)\r\n                            setTxDetails(withdraw.txDetails[0].txHash)\r\n\r\n                            Axios.post(`https://anchorgold-server.herokuapp.com/api/transactions/${info.wallet}/transactions`, {\r\n                                wallet: info.wallet,\r\n                                transaction_type:\"withdraw\",\r\n                                amount: (Math.abs(amount) * -1),\r\n                                txHash: withdraw.txDetails[0].txHash\r\n                            })\r\n                            \r\n                            Axios.get(`https://anchorgold-server.herokuapp.com/api/users/${info.wallet}`)\r\n                            .then(resp => {\r\n                                setInfo({ \r\n                                    initBalance: parseFloat(resp.data.ustBalance, 10) - parseFloat(amount, 10),\r\n                                    balance: balanceInfo.balances[0].account_balance,\r\n                                    deposit: balanceInfo.balances[0].deposit_balance,\r\n                                    height: balanceInfo.height,\r\n                                    liquidity: market.markets[0].liquidity,\r\n                                    APY: market.markets[0].APY,\r\n                                    reward: balanceInfo.balances[0].deposit_balance - (parseFloat(resp.data.ustBalance, 10) - parseFloat(amount, 10)),\r\n                                    wallet: info.wallet\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                console.log( err, \"ERROR GETTING BALANCE\")\r\n                            })\r\n\r\n                            await Axios.patch(`https://anchorgold-server.herokuapp.com/api/users/${info.wallet}`, {\r\n                                ustBalance :  parseFloat(info.initBalance, 10) - parseFloat(amount, 10)\r\n                            }).then(resp => {\r\n                                console.log('WITHDREW SUCCESSFULLY')\r\n                            }).catch(err => {\r\n                                console.log( err, 'SUM FUCKED UP ERROR')\r\n                            })\r\n                            \r\n                        } catch (err) {\r\n                            alert(err)\r\n                        }\r\n                    }\r\n                    withdrawData(); \r\n                } catch(err) {\r\n                    alert(err)\r\n                }\r\n            } else {\r\n                alert('No data')\r\n            }\r\n            handleClickOpenWithdraw()\r\n        } else {\r\n            alert('Connect Wallet')\r\n            handleClickOpenWithdraw()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title>TOTAL DEPOSIT</Title>\r\n            <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\r\n                {parseFloat(props.deposit).toFixed(2)} UST\r\n            </Typography>\r\n            <Box pt={4} align=\"center\" >\r\n                <Button onClick={handleClickOpenDeposit} variant=\"contained\" className={classes.button} size=\"small\" color=\"primary\">\r\n                    Deposit\r\n                </Button>\r\n                <Button onClick={handleClickOpenWithdraw} variant=\"contained\" className={classes.button} size=\"small\" color=\"primary\">\r\n                    Withdraw\r\n                </Button>\r\n            </Box>\r\n\r\n            {/* DEPOSIT */}\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={openDeposit}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClickOpenDeposit}\r\n                classes={{ paper : classes.dialogPaper}}\r\n                maxWidth={'xl'}\r\n\r\n            >\r\n                <Box className={classes.box} m={5} >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\"><Title>DEPOSIT</Title></DialogTitle>\r\n                    <Box display=\"flex\"  >\r\n                        <Box p={1} flexGrow={1}  >\r\n                            <TextField \r\n                                type=\"number\"\r\n                                fullWidth={true}  \r\n                                value={amount}\r\n                                onChange={e => setAmount(e.target.value)}\r\n                                label=\"Amount\"  \r\n                            /><FormHelperText id=\"my-helper-text\">UST BALANCE: {info.balance} </FormHelperText>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\"  >\r\n                        <Box p={1} flexGrow={1}  >\r\n                            <TextField \r\n                                \r\n                                fullWidth={true}  \r\n                                value={mnenmonic}\r\n                                onChange={e => setMnemonic(e.target.value)}\r\n                                label=\"Menonmic\" \r\n                                \r\n                            /><FormHelperText id=\"my-helper-text\">Paste Mnenomic</FormHelperText>\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box pt={4} align=\"center\" >\r\n                        <Button onClick={addDeposit} variant=\"contained\" className={classes.button} size=\"large\" color=\"primary\">\r\n                            Deposit\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Dialog>\r\n\r\n\r\n            {/* WITHDRAW */}\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={openWithdraw}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClickOpenWithdraw}\r\n                classes={{ paper : classes.dialogPaper}}\r\n                maxWidth={'xl'}\r\n            >\r\n                <Box className={classes.box} m={5} >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\"><Title>WITHDRAW</Title></DialogTitle>\r\n                    <Box display=\"flex\"  >\r\n                        <Box p={1} flexGrow={1}  >\r\n                            <TextField \r\n                                type=\"number\"\r\n                                fullWidth={true}  \r\n                                value={amount}\r\n                                onChange={e => setAmount(e.target.value)}\r\n                                label=\"Amount\"  \r\n                            /><FormHelperText id=\"my-helper-text\">UST BALANCE: {parseFloat(info.deposit).toFixed(2)} </FormHelperText>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\"  >\r\n                        <Box p={1} flexGrow={1}  >\r\n                            <TextField \r\n                                fullWidth={true}  \r\n                                value={mnenmonic}\r\n                                onChange={e => setMnemonic(e.target.value)}\r\n                                label=\"Menonmic\" \r\n                            /><FormHelperText id=\"my-helper-text\">Paste Mnenomic</FormHelperText>\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box pt={4} align=\"center\" >\r\n                        <Button onClick={addWithdraw} variant=\"contained\" className={classes.button} size=\"large\" color=\"primary\">\r\n                            Withdraw\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\n\r\nconst GreenTextTypography = withStyles({\r\n    root: {\r\n        color: green[400]\r\n    }\r\n  })(Typography);\r\n\r\nexport default function Total_InterestRate(props) {\r\n\r\n    return (\r\n        <>\r\n            <Title>INTEREST RATE</Title>\r\n            <GreenTextTypography variant=\"h2\" component=\"h2\">\r\n                {parseFloat(props.interest * 100).toFixed(2)}%\r\n            </GreenTextTypography>\r\n        </>\r\n    );\r\n}\r\n","import React, {useState, useContext, useEffect} from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { InfoContext } from './context/InfoContext'\r\nimport { yellow } from \"@material-ui/core/colors\";\r\n// function preventDefault(event) {\r\n//   event.preventDefault();\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    depositContext: {\r\n        flex: 1\r\n    },\r\n    button: {\r\n        // margin: 10,\r\n        borderRadius: 20,\r\n        width: '40%',\r\n        padding: 5,\r\n        color: yellow[500]\r\n    },\r\n}))\r\n\r\nconst ColorToggleButton = withStyles((theme) => ({\r\n    // root: {\r\n    //     color: theme.palette.getContrastText(yellow[500]),\r\n    //     borderColor: yellow[500],\r\n        \r\n    //     '&:hover': {\r\n    //         backgroundColor: yellow[700],\r\n    //         color: '#fff'\r\n    //     },\r\n    // },\r\n}))(ToggleButton);\r\n\r\nexport default function Total_Expected(props) {\r\n    const classes = useStyles();\r\n    const [alignment, setAlignment] = React.useState('day');\r\n    const [a, setA]= useState('0.00')\r\n    const [info, setInfo] = useContext(InfoContext);\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n      setAlignment(newAlignment);\r\n    };\r\n\r\n    const handleYear = () => {\r\n        setA(props.apy * info.initBalance)\r\n    }\r\n    const handleMonth = () => {\r\n        setA((props.apy * info.initBalance)/12)\r\n    }\r\n    const handleWeek = () => {\r\n        setA((props.apy * info.initBalance)/52)\r\n    }\r\n    const handleDay = () => {\r\n        setA((props.apy * info.initBalance)/365)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Title>EXPECTED INTEREST</Title>\r\n            <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\r\n                {parseFloat(a).toFixed(2)} UST\r\n            </Typography>\r\n            <Box pt={4} align=\"center\">\r\n                <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n                    <ColorToggleButton className={classes.button} onClick={handleYear} value=\"year\" color=\"primary\">\r\n                        <Typography fontSize='1rem' color=\"textSecondary\">YEAR</Typography>\r\n                    </ColorToggleButton>\r\n                    <ColorToggleButton className={classes.button} onClick={handleMonth} value=\"month\" >\r\n                        <Typography fontSize='1rem' color=\"textSecondary\">MONTH</Typography>\r\n                    </ColorToggleButton>\r\n                    <ColorToggleButton className={classes.button} onClick={handleWeek} value=\"week\">\r\n                        <Typography fontSize='1rem' color=\"textSecondary\">WEEK</Typography>\r\n                    </ColorToggleButton>\r\n                    <ColorToggleButton className={classes.button} onClick={handleDay} value=\"day\">\r\n                        <Typography fontSize='1rem' color=\"textSecondary\">DAY</Typography>\r\n                    </ColorToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Box>\r\n            \r\n        </>\r\n    );\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Title from \"./Title\";\r\nimport Axios from 'axios';\r\nimport { InfoContext } from './context/InfoContext'\r\n\r\nconst columns = [\r\n    { id: 'amount', label:'amount', maxWidth: 3},\r\n    { id: 'transaction_type', label:'transaction', minWidth: 8},\r\n    { id: 'txHash', label: 'txHash', minWidth: 10 },\r\n    { id: 'date', label: 'Date', minWidth: 10, align: 'right'}\r\n];\r\n\r\nlet theArray = []\r\n\r\nconst useStyles = makeStyles({\r\nroot: {\r\n    width: '100%',\r\n},\r\ncontainer: {\r\n    maxHeight: 440,\r\n},\r\n});\r\n\r\nexport default function Transactions(props) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [info, setInfo] = useContext(InfoContext);\r\n    \r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(props.value)\r\n        \r\n        if (props.value){\r\n            \r\n            const getTableData = () => {\r\n\r\n                Axios.get(`https://anchorgold-server.herokuapp.com/api/transactions/${info.wallet}`)\r\n                .then(resp => {\r\n                    \r\n                    for (var i = 0; i < resp.data.length; i++) {\r\n\r\n                        function makeURL(val){\r\n                            var str = val\r\n                            var res = str.substring(0,6)\r\n                            var resLength = str.length\r\n                            var resLast = str.substring((resLength-6), resLength)\r\n                            \r\n                            var url = `https://finder.terra.money/tequila-0004/tx/${val}`\r\n                            var shortenedTXHash = res +  \"...\" + resLast\r\n                            return <Link href={url}>{shortenedTXHash}</Link>\r\n                        }\r\n                        \r\n                        const newItem = {\r\n                            amount: resp.data[i].amount,\r\n                            transaction_type: resp.data[i].transaction_type,\r\n                            txHash:  makeURL(resp.data[i].txHash),  //resp.data[i].txHash, \r\n                            date: resp.data[i].created_at\r\n                        }\r\n                        theArray.push(newItem)\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            getTableData()\r\n        }\r\n        \r\n    },[props.value, info.wallet])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Title>TRANSACTION HISTORY</Title>\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableBody>\r\n                        {theArray.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                        return (\r\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                            {columns.map((column) => {\r\n                                const value = row[column.id];\r\n                                return (\r\n                                <TableCell key={column.id} align={column.align} >\r\n                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                </TableCell>\r\n                                );\r\n                            })}\r\n                            </TableRow>\r\n                        );\r\n                        })}\r\n                    </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                        labelRowsPerPage = ''\r\n                        rowsPerPageOptions={[5, 25, 100]}\r\n                        component=\"div\"\r\n                        count={theArray.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\n","import { createContext } from 'react';\r\n\r\nexport const UserBalanceContext = createContext(null);","import { createContext } from 'react';\r\n\r\nexport const RewardContext = createContext(null);","import React, {useContext, useEffect} from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { green, red } from \"@material-ui/core/colors\";\r\n\r\nimport Copyright from './Copyright'\r\nimport TotalDeposit from './Total_Deposit'\r\nimport TotalInterest from './Total_InterestRate'\r\nimport TotalExpected from './Total_Expected'\r\nimport TotalTransactions from './Total_Transactions'\r\n\r\nimport { UserContext } from './context/UserContext'\r\nimport { InfoContext } from './context/InfoContext'\r\nimport { UserBalanceContext } from './context/UserBalanceContext'\r\nimport { RewardContext } from './context/RewardContext'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'left'\r\n    },\r\n    sub_title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    customBorderRadius: {\r\n        borderRadius: 16,\r\n        \r\n    },\r\n    fixedCardHeight: {\r\n        height: 200,\r\n        borderRadius: 16,\r\n    },\r\n    appBarSpacer: {\r\n        margin: theme.spacing(1.5),\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\"\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\"\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n        borderRadius: 16,\r\n    },\r\n    item2: {\r\n        order: 3,\r\n        [theme.breakpoints.up('sm')]: {\r\n            order: 2,\r\n        },\r\n    },\r\n    item3: {\r\n        order: 2,\r\n        [theme.breakpoints.up('sm')]: {\r\n            order: 3,\r\n        },\r\n    },\r\n    fixedTableHeight: {\r\n        height: 'auto',\r\n        borderRadius: 16,\r\n    }\r\n})\r\n);\r\n\r\nconst RedArrow = withStyles({\r\n    root: {\r\n        color: red[400]\r\n    }\r\n})(ArrowDownwardIcon);\r\n\r\nconst GreenArrow = withStyles({\r\n    root: {\r\n        color: green[400]\r\n    }\r\n})(ArrowUpwardIcon);\r\n\r\n\r\nconst Body = () => {\r\n    const classes = useStyles();\r\n    const [info, setInfo] = useContext(InfoContext);\r\n    const [rewards, setRewards] = useContext(RewardContext);\r\n\r\n    \r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n        \r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={4} md={4} lg={4}>\r\n                        <Paper className={classes.customBorderRadius} elevation={7}>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>BAL<RedArrow /></Typography>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>{parseFloat(info.balance).toFixed(2)}</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={4} lg={4}>\r\n                        <Paper className={classes.customBorderRadius} elevation={7}>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>EARN<GreenArrow /></Typography>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>{parseFloat(info.deposit).toFixed(2)}</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={4} lg={4}>\r\n                        <Paper className={classes.customBorderRadius} elevation={7}>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>REWARD</Typography>\r\n                            <Typography variant=\"h6\" className={classes.sub_title}>{parseFloat(info.reward).toFixed(6)}</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/*DEPOSITS  */}\r\n                    <Grid item xs={12} md={7} lg={7}>\r\n                        <Card elevation={7} className={classes.fixedCardHeight}>\r\n                            <CardContent>\r\n                                <TotalDeposit deposit={info.initBalance} />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/* INTERST RATE */}\r\n                    <Grid item xs={12} md={5} lg={5}>\r\n                        <Card elevation={7} className={classes.fixedCardHeight}>\r\n                            <CardContent>\r\n                                <TotalInterest interest={info.APY} />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/* HISTORY  PASSPROPS FROM AXIOS */}\r\n                    <Grid item xs={12} md={7} lg={7} className={classes.item2}>\r\n                        <Card elevation={7} className={classes.fixedTableHeight}>\r\n                            <CardContent>\r\n                                <TotalTransactions value={true}/> \r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/* EXPECTED INTERST */}\r\n                    <Grid item xs={12} md={5} lg={5} className={classes.item3}>\r\n                        <Card elevation={7}  className={classes.fixedTableHeight}>\r\n                            <CardContent >\r\n                                <TotalExpected apy={info.APY}/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            \r\n            <Copyright blockHeight={info.height} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import React, {useState, useContext, useEffect} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountBalanceWalletTwoToneIcon from '@material-ui/icons/AccountBalanceWalletTwoTone';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Title from \"./Title\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { InfoContext } from './context/InfoContext'\r\nimport { RewardContext } from './context/RewardContext'\r\nimport { AnchorEarn, CHAINS, NETWORKS, DENOMS } from '@anchor-protocol/anchor-earn';\r\nimport Axios from 'axios'\r\nimport { Extension } from '@terra-money/terra.js';\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'left'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    fixedHeight: {\r\n        height: 120\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    \r\n    logo: {\r\n        maxWidth: 40,\r\n        marginRight: '10px'\r\n    },\r\n    sub_title: {\r\n        textAlign: 'center'\r\n    },\r\n    content: {\r\n        backgroundColor: '#263211'\r\n    },\r\n    dialog: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            \"& .MuiDialog-container .MuiDialog-paper\": {\r\n                margin: \"0px 0px\",\r\n                borderRadius: '25px',\r\n                height: '440px',\r\n                // position: \"absolute\", left: \"0%\", top: \"50%\", transform: \"translate(-75%,-50%)\"\r\n                transform: \"translate(0%, 50%) !important\"\r\n            },\r\n        }\r\n    },\r\n    dialogPaper: {\r\n        height : 'auto',\r\n        width : '800px',\r\n        borderRadius : '25px',\r\n\r\n    },\r\n    button: {\r\n        margin: 10,\r\n        borderRadius: 20,\r\n        // width: '5%',\r\n        // padding: 5\r\n    },\r\n    buttonChrome: {\r\n        margin: 10,\r\n        borderRadius: 20,\r\n        width: '100%',\r\n        padding: 5\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    grid : {\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    \r\n})\r\n);\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst  WalletMenuIcon = (props) => {\r\n    const classes = useStyles();\r\n    const [info, setInfo] = useContext(InfoContext);\r\n    const [wallet, setWallet] = useLocalStorage(\"wallet_address\", \"\");\r\n    const [openWallet, setOpenWallet] = useState(false);\r\n\r\n    const handleClickOpenWallet = () => {\r\n        setOpenWallet(!openWallet);\r\n    };\r\n\r\n    const connect = () => {\r\n        const ext = new Extension();\r\n        ext.connect();\r\n        ext.on(\"onConnect\", setWallet);\r\n    }\r\n\r\n    const destroy = () => {\r\n        localStorage.removeItem('wallet_address')\r\n    }\r\n\r\n    const connectWebWallet = () => {\r\n        handleClickOpenWallet()\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setWallet({address: 'terra1kmm34gn0tryvx9wzwgxl7hd9fj5n8yt88g93jw'})\r\n\r\n        if(wallet.address){\r\n            const anchorEarn = new AnchorEarn({\r\n                name: \"testnet\",\r\n                chain: CHAINS.TERRA,\r\n                network: NETWORKS.TEQUILA_0004,\r\n                address: wallet.address\r\n            });\r\n\r\n            async function fetchData() {\r\n                const balanceInfo = await anchorEarn.balance({ currencies: [ DENOMS.UST ] });\r\n                const market = await anchorEarn.market({ currencies: [ DENOMS.UST ] });\r\n\r\n                await Axios.post(`https://anchorgold-server.herokuapp.com/api/users`, {\r\n                    wallet: wallet.address,\r\n                    ustBalance: 0\r\n                }).then(resp => {\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    console.log( 'WALLET ALREADY EXISTS, PATCHING BALANCE' )\r\n                })\r\n\r\n                await Axios.get(`https://anchorgold-server.herokuapp.com/api/users/${wallet.address}`)\r\n                    .then(resp => {\r\n\r\n                        setInfo({\r\n                            balance: balanceInfo.balances[0].account_balance,\r\n                            deposit: balanceInfo.balances[0].deposit_balance,\r\n                            height: balanceInfo.height,\r\n                            liquidity: market.markets[0].liquidity,\r\n                            APY: market.markets[0].APY,\r\n                            wallet: wallet.address,\r\n                            reward: balanceInfo.balances[0].deposit_balance - resp.data.ustBalance, \r\n                            initBalance: resp.data.ustBalance\r\n                        })\r\n                    })\r\n                    .catch(err => {\r\n                        console.log( 'SUM FUCKING ERROR' )\r\n                    })\r\n            }\r\n            \r\n            fetchData(); \r\n        }\r\n    }, []);\r\n\r\n    // Hook\r\n    function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n        }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n        try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n            value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText(green[500]),\r\n            borderColor: green[500],\r\n            color: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n                color: '#fff'\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={connect}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountBalanceWalletTwoToneIcon />\r\n            </IconButton>\r\n\r\n            {/* <ColorButton \r\n                onClick={destroy}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                \r\n            >App</ColorButton> */}\r\n\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={openWallet}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClickOpenWallet}\r\n                classes={{ paper : classes.dialogPaper}}\r\n                maxWidth={'xl'}\r\n            >\r\n                <Box className={classes.box} m={2} >\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Typography variant=\"h6\" className={classes.sub_title}><Title>Connect Wallet</Title></Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={12} md={12} lg={12} className={classes.grid} >\r\n                                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                    <TextField\r\n                                        label=\"Wallet Address\"\r\n                                        inputProps={{ className: classes.textarea }}\r\n                                        style= {{width: '70%'}}\r\n                                        // value={webWallet}\r\n                                        // onChange={e => setWebWallet(e.target.value)}\r\n                                    />\r\n                                <Button \r\n                                    onClick={connectWebWallet}\r\n                                    size=\"medium\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    endIcon={<AccountBalanceWalletTwoToneIcon />}\r\n                                >Engage</Button>\r\n                                </Box>\r\n                            \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Box>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WalletMenuIcon\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst MenuIcon = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = (nav) => {\r\n        setAnchorEl(null);\r\n    \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                color=\"inherit\"\r\n            >\r\n                <MenuTwoToneIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem component=\"a\" href=\"/earn\">Earn</MenuItem>\r\n                <MenuItem component=\"a\" href=\"/\">Home</MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuIcon\r\n","export default __webpack_public_path__ + \"static/media/gold.4ac2dcd4.png\";","    import React, { useState } from 'react';\r\n\r\n    import {\r\n        ThemeProvider,\r\n        withStyles,\r\n        makeStyles,\r\n        createMuiTheme,\r\n        \r\n    } from '@material-ui/core/styles';\r\n    import AppBar from '@material-ui/core/AppBar';\r\n    import Toolbar from '@material-ui/core/Toolbar';\r\n    import Typography from '@material-ui/core/Typography';\r\n    import Switch from '@material-ui/core/Switch';\r\n    import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n    import FormGroup from '@material-ui/core/FormGroup';\r\n    import { green, blue } from \"@material-ui/core/colors\";\r\n    import Radio from '@material-ui/core/Radio';\r\n    \r\n    import WalletMenuIcon from './WalletMenuIcon'\r\n    import MenuIcon from './MenuIcon'\r\n    import gold from './images/gold.png'\r\n    // import { UserContext } from './context/UserContext'\r\n    // import { InfoContext } from './context/InfoContext'\r\n    // import { UserBalanceContext } from './context/UserBalanceContext'\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n            root: {\r\n                flexGrow: 1,\r\n            },\r\n            \r\n            menuButton: {\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            title: {\r\n                flexShrink: 1,\r\n                textAlign: 'left'\r\n            },\r\n            titleMain1: {\r\n                flexGrow: 1,\r\n                margin: theme.spacing(1.5),\r\n                textAlign: 'center'\r\n            },\r\n            margin: {\r\n                margin: theme.spacing(0.5),\r\n            },\r\n            fixedHeight: {\r\n                height: 120\r\n            },\r\n            logo: {\r\n                maxWidth: 120,\r\n            },\r\n            appBarSpacer: theme.mixins.toolbar,\r\n        })\r\n    );\r\n\r\n    const GreenRadio = withStyles({\r\n            root: {\r\n                color: green[400],\r\n                '&$checked': {\r\n                    color: green[600],\r\n                },\r\n            },\r\n            checked: {},\r\n    })((props) => <Radio color=\"default\" {...props} />);\r\n    \r\n    const BlueRadio = withStyles({\r\n            root: {\r\n            color: blue[400],\r\n            '&$checked': {\r\n                color: blue[600],\r\n            },\r\n            },\r\n            checked: {},\r\n    })((props) => <Radio color=\"default\" {...props} />);\r\n\r\n    export default function MenuAppBar() {\r\n    \r\n        const [darkState, setDarkState] = useState(false);\r\n        const palletType = darkState ? \"dark\" : \"light\";\r\n        const mainPrimaryColor = darkState ? '#ffeb3b' : '#263238';\r\n        const mainSecondaryColor = darkState ? '#263238' : '#ffeb3b';\r\n        \r\n        const darkTheme = createMuiTheme({\r\n            palette: {\r\n            type: palletType,\r\n                primary: {\r\n                    main: mainPrimaryColor\r\n                },\r\n                secondary: {\r\n                    main: mainSecondaryColor\r\n                }\r\n            }\r\n        });\r\n        const [selectedValue, setSelectedValue] = React.useState('tequila');\r\n        const classes = useStyles();\r\n        const [auth, setAuth] = React.useState(true);\r\n        const [anchorEl, setAnchorEl] = React.useState(null);\r\n        const open = Boolean(anchorEl);\r\n\r\n        const handleThemeChange = () => {\r\n            setDarkState(!darkState);\r\n        };\r\n\r\n        const handleChangeChecked = (event) => {\r\n            setSelectedValue(event.target.value);\r\n        };\r\n\r\n        const handleChange = (event) => {\r\n            setAuth(event.target.checked);\r\n        };\r\n\r\n        const handleMenu = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <div className={classes.root}>\r\n                <FormGroup row >\r\n                    <FormControlLabel\r\n                        \r\n                        control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n                        label={auth ? 'Disconnect' : 'Connect Wallet'}\r\n                        \r\n                    />\r\n                    {auth && (\r\n                        <div> \r\n                            <FormControlLabel\r\n                                control={<BlueRadio\r\n                                    checked={selectedValue === 'tequila'}\r\n                                    onChange={handleChangeChecked}\r\n                                    value=\"tequila\"\r\n                                    name=\"radio-button-demo\"\r\n                                    inputProps={{ 'aria-label': 'tequila' }}\r\n                                    size=\"small\"\r\n                                />}\r\n                                label=\"tequila\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<GreenRadio\r\n                                    checked={selectedValue === 'columbus'}\r\n                                    onChange={handleChangeChecked}\r\n                                    value=\"columbus\"\r\n                                    name=\"radio-button-demo\"\r\n                                    inputProps={{ 'aria-label': 'columbus' }}\r\n                                    size=\"small\"\r\n                                />}\r\n                                label=\"columbus\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </FormGroup>\r\n                \r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        {/* <Typography variant=\"h6\" className={classes.title}>Anchor.Gold</Typography> */}\r\n                        <Typography variant=\"h6\" className={classes.titleMain1}>Turn Terra into <img src={gold} alt=\"Anchor.Gold!\" className={classes.logo} /></Typography>\r\n                        \r\n                        <Switch checked={darkState} onChange={handleThemeChange} />\r\n                        {auth && (\r\n                            <WalletMenuIcon handleMenu={handleMenu} anchorEl={anchorEl} open={open} handleClose={handleClose}/>\r\n                        )}\r\n                            <MenuIcon />\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Body from './Body';\nimport MenuAppBar from './MenuAppBar';\n\n\nimport { UserContext } from './context/UserContext';\nimport { InfoContext } from './context/InfoContext';\nimport { UserBalanceContext } from './context/UserBalanceContext';\nimport { RewardContext } from './context/RewardContext';\nimport {  makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        backgroundColor: theme.palette.background.paper,\n    })\n);\n\nfunction App() {\n\n    const [value, setValue] = useState(null);\n    const [info, setInfo] = useState([null]);\n    const [userBalance, setUserBalance] = useState(null);\n    const [rewards, setRewards] = useState(null);\n    const classes = useStyles();\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <UserContext.Provider value={[value, setValue]} >\n                    <UserBalanceContext.Provider value={[userBalance, setUserBalance]}>\n                        <InfoContext.Provider value={[info, setInfo]} >\n                            <RewardContext.Provider value={[rewards, setRewards]}>\n                                <Route path=\"/earn\">\n                                    <MenuAppBar />\n                                </Route>\n                                <Route exact path=\"/\">\n                                    <MenuAppBar />\n                                    <Body />\n                                </Route>\n                                \n                            </RewardContext.Provider>\n                        </InfoContext.Provider >\n                    </UserBalanceContext.Provider>\n                </UserContext.Provider>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}